// Mocks generated by Mockito 5.1.0 from annotations
// in todo_clean/test/features/todo/presentation/pages/todos/bloc/todos_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_clean/core/error/failures.dart' as _i7;
import 'package:todo_clean/core/usecases/use_case_interface.dart' as _i6;
import 'package:todo_clean/features/todo/domain/entities/todo.dart' as _i5;
import 'package:todo_clean/features/todo/domain/usecases/get_todos_usecase.dart' as _i2;
import 'package:todo_clean/features/todo/domain/usecases/refresh_todos_usecase.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeIGetTodosUseCaseDatasource_0 extends _i1.Fake implements _i2.IGetTodosUseCaseDatasource {
}

class _FakeIRefreshTodosUseCaseDatasource_1 extends _i1.Fake
    implements _i3.IRefreshTodosUseCaseDatasource {}

/// A class which mocks [GetTodosUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTodosUsecase extends _i1.Mock implements _i2.GetTodosUsecase {
  MockGetTodosUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IGetTodosUseCaseDatasource get datasource =>
      (super.noSuchMethod(Invocation.getter(#datasource),
          returnValue: _FakeIGetTodosUseCaseDatasource_0()) as _i2.IGetTodosUseCaseDatasource);
  @override
  _i4.Stream<List<_i5.Todo>> call(_i6.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Stream<List<_i5.Todo>>.empty()) as _i4.Stream<List<_i5.Todo>>);
}

/// A class which mocks [RefreshTodosUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRefreshTodosUsecase extends _i1.Mock implements _i3.RefreshTodosUsecase {
  MockRefreshTodosUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IRefreshTodosUseCaseDatasource get datasource => (super.noSuchMethod(
      Invocation.getter(#datasource),
      returnValue: _FakeIRefreshTodosUseCaseDatasource_1()) as _i3.IRefreshTodosUseCaseDatasource);
  @override
  _i4.Future<_i7.Failure?> call(_i6.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i7.Failure?>.value()) as _i4.Future<_i7.Failure?>);
}
